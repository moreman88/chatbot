"""
Telegram-–±–æ—Ç –¥–ª—è –ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–æ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —Å–µ—Ä–≤–∏—Å–∞
–í–µ—Ä—Å–∏—è: 1.1 (—Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Gemini)
"""

import asyncio
import logging
import ssl
import os
import google.generativeai as genai
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.enums import ParseMode

# ---------------------------------------
# SSL –æ–±—Ö–æ–¥ –¥–ª—è Python –∏–∑ Microsoft Store
# ---------------------------------------
ssl._create_default_https_context = ssl._create_unverified_context

# ---------------------------------------
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini
# ---------------------------------------
os.environ["GOOGLE_API_KEY"] = "AIzaSyBSeT4fCI0wphjsujGkfFJ9VkexhUiKveE"
genai.configure(api_key=os.environ["GOOGLE_API_KEY"])
model = genai.GenerativeModel("gemini-1.5-flash")

SYSTEM_PROMPT = (
    "–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–æ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —Å–µ—Ä–≤–∏—Å–∞ (–ö–ö–¢–∏–°). "
    "–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–ª–ª–µ–¥–∂–µ–º, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º, –ø—Ä–∏—ë–º–æ–º, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º, "
    "—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º–∏, –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –∏ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π –∂–∏–∑–Ω—å—é. "
    "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –∫–∞—Å–∞–µ—Ç—Å—è –∫–æ–ª–ª–µ–¥–∂–∞ –∏–ª–∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è ‚Äî –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∂–∏—Å—å –æ—Ç–≤–µ—á–∞—Ç—å, "
    "–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–ª–ª–µ–¥–∂–µ–º –ö–ö–¢–∏–°.¬ª "
    "–û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –∫—Ä–∞—Ç–∫–æ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ."
)

# ---------------------------------------
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
# ---------------------------------------
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ---------------------------------------
# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
# ---------------------------------------
BOT_TOKEN = "8407576281:AAF0lofeJQxBxsxEoYrMimB4ACAtVVyHN9w"

COLLEGE_NAME = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∏–π –∫–æ–ª–ª–µ–¥–∂ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —Å–µ—Ä–≤–∏—Å–∞"
SCHEDULE_URL = "https://docs.google.com/spreadsheets/d/1F82YExVeyvm0CPNuMfVYBxLPzX17p_iz/edit?usp=sharing&ouid=112502196767433801385&rtpof=true&sd=true"
SITE_URL = "https://kktis.kz"

# ---------------------------------------
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
# ---------------------------------------
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


def get_main_keyboard() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"),
                KeyboardButton(text="üéì –ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è")
            ],
            [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª..."
    )
    return keyboard


# ---------------------------------------
# –ö–æ–º–∞–Ω–¥–∞ /start
# ---------------------------------------
@dp.message(CommandStart())
async def cmd_start(message: Message):
    welcome_text = (
        f"üéì <b>{COLLEGE_NAME}</b>\n\n"
        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.from_user.first_name}</b>!\n"
        f"–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n\n"
        f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n"
        f"üéì –ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è\n"
        f"üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã\n\n"
        f"üëá –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ:"
    )
    await message.answer(welcome_text, reply_markup=get_main_keyboard(), parse_mode=ParseMode.HTML)


# ---------------------------------------
# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
# ---------------------------------------
@dp.message(F.text == "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def show_schedule(message: Message):
    await message.answer(
        f"üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ:\nüîó <a href='{SCHEDULE_URL}'>–û—Ç–∫—Ä—ã—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</a>",
        parse_mode=ParseMode.HTML,
        disable_web_page_preview=True
    )


# ---------------------------------------
# –ö–æ–Ω—Ç–∞–∫—Ç—ã
# ---------------------------------------
@dp.message(F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def show_contacts(message: Message):
    contacts_text = (
        f"üìç –ö–∞—Ä–∞–≥–∞–Ω–¥–∞, —É–ª. –ó–∞—Ç–∞–µ–≤–∏—á–∞, 75\n"
        f"‚òéÔ∏è 8-7212-37-58-44\n"
        f"‚úâÔ∏è krg-koll-7092@bilim09.kzu.kz\n"
        f"üåê {SITE_URL}"
    )
    await message.answer(contacts_text, parse_mode=ParseMode.HTML)


# ---------------------------------------
# –ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è
# ---------------------------------------
@dp.message(F.text == "üéì –ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è")
async def show_admission(message: Message):
    await message.answer("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏—ë–º–µ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ: https://kktis.kz", parse_mode=ParseMode.HTML)


# ---------------------------------------
# AI-–û—Ç–≤–µ—Ç—ã (Gemini)
# ---------------------------------------
@dp.message()
async def handle_ai_chat(message: Message):
    """–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã ‚Äî —á–µ—Ä–µ–∑ Gemini"""
    user_text = message.text.strip()

    try:
        prompt = f"{SYSTEM_PROMPT}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_text}"
        response = model.generate_content(prompt)
        ai_reply = response.text if response and response.text else "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò."
    except Exception as e:
        ai_reply = f"üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò: {e}"

    await message.answer(ai_reply)


# ---------------------------------------
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
# ---------------------------------------
async def main():
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ {COLLEGE_NAME}")
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
